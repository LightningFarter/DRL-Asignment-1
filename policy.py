'''
0 south
1 north
2 east
3 west
4 pick
5 drop

    relative_direction_to_destination -> tuple(int, int), 
    obstacles_of_four_way -> tuple(int, int, int, int), 
    can_pickup -> bool,
    can_drop -> bool,

  0 -> column
0
|
v
row
(row, column)

obstacle (n, s, e, w)
'''
#                                              s     n     e     w,    p,    d
policy = { #                                  [0,    1,    2,    3,    4,    5]
    ((0, 0), (0, 0, 0, 0), True, False)     : [0,    0,    0,    0,    1,    0], # 4
    ((0, 0), (0, 0, 0, 0), False, True)     : [0,    0,    0,    0,    0,    1], # 5
    ((1, 0), (0, 0, 0, 0), False, False)    : [1,    0,    0,    0,    0,    0], # 0
    ((-1, 0), (0, 0, 0, 0), False, False)   : [0,    1,    0,    0,    0,    0], # 1
    ((0, 1), (0, 0, 0, 0), False, False)    : [0,    0,    1,    0,    0,    0], # 2
    ((0, -1), (0, 0, 0, 0), False, False)   : [0,    0,    0,    1,    0,    0], # 3
    ((1, 1), (0, 0, 0, 0), False, False)    : [0.5,  0,    0.5,  0,    0,    0], # 0 + 2
    ((1, -1), (0, 0, 0, 0), False, False)   : [0.5,  0,    0,    0.5,  0,    0], # 0 + 3
    ((-1, 1), (0, 0, 0, 0), False, False)   : [0,    0.5,  0.5,  0,    0,    0], # 1 + 2
    ((-1, -1), (0, 0, 0, 0), False, False)  : [0,    0.5,  0,    0.5,  0,    0], # 1 + 3
    # obstacle (1, 0, 0, 0) north                    x
    ((1, 0), (1, 0, 0, 0), False, False)    : [1,    0,    0,    0,    0,    0], # 0
    ((-1, 0), (1, 0, 0, 0), False, False)   : [0.1,  0,    0.45, 0.45, 0,    0], # 1
    ((0, 1), (1, 0, 0, 0), False, False)    : [0,    0,    1,    0,    0,    0], # 2
    ((0, -1), (1, 0, 0, 0), False, False)   : [0,    0,    0,    1,    0,    0], # 3
    ((1, 1), (1, 0, 0, 0), False, False)    : [0.5,  0,    0.5,  0,    0,    0], # 0 + 2
    ((1, -1), (1, 0, 0, 0), False, False)   : [0.5,  0,    0,    0.5,  0,    0], # 0 + 3
    ((-1, 1), (1, 0, 0, 0), False, False)   : [0.2,  0,    0.8,  0,    0,    0], # 1 + 2
    ((-1, -1), (1, 0, 0, 0), False, False)  : [0.2,  0,    0,    0.8,  0,    0], # 1 + 3
    # obstacle (0, 1, 0, 0) south              x
    ((1, 0), (0, 1, 0, 0), False, False)    : [0,    0.1,  0.45, 0.45, 0,    0], # 0
    ((-1, 0), (0, 1, 0, 0), False, False)   : [0,    1,    0,    0,    0,    0], # 1
    ((0, 1), (0, 1, 0, 0), False, False)    : [0,    0,    1,    0,    0,    0], # 2
    ((0, -1), (0, 1, 0, 0), False, False)   : [0,    0,    0,    1,    0,    0], # 3
    ((1, 1), (0, 1, 0, 0), False, False)    : [0,    0.2,  0.8,  0,    0,    0], # 0 + 2
    ((1, -1), (0, 1, 0, 0), False, False)   : [0,    0.2,  0,    0.8,  0,    0], # 0 + 3
    ((-1, 1), (0, 1, 0, 0), False, False)   : [0,    0.5,  0.5,  0,    0,    0], # 1 + 2
    ((-1, -1), (0, 1, 0, 0), False, False)  : [0,    0.5,  0,    0.5,  0,    0], # 1 + 3
}